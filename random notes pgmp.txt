50 ref for LR and meth

#
#old model
'''
LSTM_model = keras.Sequential([
    keras.layers.LSTM(64, activation='relu', input_shape=(N, data_in.shape[2])),
    keras.layers.Dense(2)
])
'''
#
=== AVERAGE METRICS ACROSS ALL BLOCKS ===
Average rmse_high_bid: 0.0124
Average rmse_low_ask: 0.0128
Average mae_high_bid: 0.0090
Average mae_low_ask: 0.0092
Average r2_high_bid: 0.5394
Average r2_low_ask: 0.5131



#
#new model
'''
LSTM_model = keras.Sequential([
    keras.layers.LSTM(64, return_sequences=True, input_shape=(N, data_in.shape[2])),
    keras.layers.Dropout(0.2),
    keras.layers.LSTM(32),
    keras.layers.Dense(16, activation='relu'),
    keras.layers.Dense(2)
])
'''
#
=== AVERAGE METRICS ACROSS ALL BLOCKS ===
Average rmse_high_bid: 0.0123
Average rmse_low_ask: 0.0126
Average mae_high_bid: 0.0091
Average mae_low_ask: 0.0093
Average r2_high_bid: 0.5515
Average r2_low_ask: 0.5305



#
# 0.3 as dropout layer
#
=== AVERAGE METRICS ACROSS ALL BLOCKS ===
Average rmse_high_bid: 0.0133
Average rmse_low_ask: 0.0136
Average mae_high_bid: 0.0099
Average mae_low_ask: 0.0102
Average r2_high_bid: 0.4022
Average r2_low_ask: 0.3759


#
# 0.1 as dropout layer
#
WORSE



#
# relu and return_ssequence + LSTM layer (32)
#

0.54
.054


££££££££££££££££££££££££££££££££££££££££££££££

The Informer Model splits data as:
80% training (70% training + 10% validating)
20% testing

££££££££££££££££££££££££££££££££££££££££££££££